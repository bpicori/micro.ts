import { MethodOptions, AuthorizeOptions, MiddlewareOptions, ControllerOptions } from "./types/MethodMetadataTypes";
import { ParamOptions } from "./types/ParamMetadataTypes";
import { AppErrorHandler } from "../errors/types/ErrorHandlerTypes";
import { AppMiddelware } from "../middlewares/IMiddleware";
export declare function registerHandlerMetadata(target: any, propertyKey: string, _descriptor: PropertyDescriptor, options: MethodOptions): void;
export declare function registerParamMetadata(target: any, propertyKey: string, index: number, options?: ParamOptions): void;
export declare function attachHandlerAuthorization(target: any, propertyKey: string, _descriptor: PropertyDescriptor, options?: AuthorizeOptions, active?: boolean): void;
export declare function attachHandlerMiddleware(target: any, propertyKey: string, _descriptor: PropertyDescriptor, options: MiddlewareOptions[]): void;
export declare function attachHandlerErrorHandler(target: any, propertyKey: string, _descriptor: PropertyDescriptor, options: AppErrorHandler[]): void;
export declare function registerControllerMetadata(target: any, options?: ControllerOptions): void;
export declare function attachControllerErrorHandlers(target: any, errorHandlers: AppErrorHandler[]): void;
export declare function attachControllerMiddleware(target: any, middlewares: AppMiddelware[], before: boolean): void;
export declare function attachControllerAuthorization(target: any, options?: AuthorizeOptions): void;
